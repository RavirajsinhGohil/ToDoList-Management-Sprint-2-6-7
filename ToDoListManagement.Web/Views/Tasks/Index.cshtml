@using ToDoListManagement.Entity.ViewModel
@model ToDoListManagement.Entity.ViewModel.ProjectTasksViewModel

@{
    ViewData["Title"] = "Task Board";

    bool canAddEdit = GetPermissionService.HasPermission(User, "Task Board", "CanAddEdit");
    bool canDelete = GetPermissionService.HasPermission(User, "Task Board", "CanDelete");

    int userId = int.TryParse(User.Identities.FirstOrDefault()?.Claims
    .FirstOrDefault(c => c.Type == "UserId")?.Value, out int id) ? id : 0;
    string? isMember = User.Identities.FirstOrDefault()?.Claims.FirstOrDefault(c => c.Type ==
    "http://schemas.microsoft.com/ws/2008/06/identity/claims/role")?.Value;
    int selectedSprintId = 0;
}

<div class="container-fluid">
    <section class="content-header my-4">
        <div class="d-flex justify-content-between">
            <h2>Task Board</h2>
        </div>
    </section>

    <div id="projectList" class="d-flex justify-content-between align-items-center my-3">
        <div class="form-floating w-25">
            @* <select class="form-select custom-select rounded-0" id="projectDropDown">
                <option value="">Select a Project</option>
                @if (Model.Projects != null)
                {
                    @foreach (ProjectDropDown? project in Model.Projects)
                    {
                        if (Model.ProjectId == project.ProjectId)
                        {
                            <option value="@project.ProjectId" selected>@project.ProjectName</option>
                        }
                        else
                        {
                            <option value="@project.ProjectId">@project.ProjectName</option>
                        }
                    }
                }
            </select> *@
            <select
                data-bind="options: projects, optionsText: 'projectName', optionsValue: 'projectId', value: selectedProjectId, optionsCaption: 'Select a Project'"
                class="form-control"></select>

            <label class="fs-6" for="Country">Project*</label>
        </div>

        <div class="form-floating w-25" id="sprintDropDownDiv">
            @* <select class="form-select custom-select rounded-0" onchange="changeSprint(this.value)" id="sprintDropDown"
                disabled>
                <option value="">Select a Sprint</option>
                @if (Model.Sprints != null)
                {
                    @foreach (SprintViewModel? sprint in Model.Sprints)
                    {
                        if (sprint.Status == "In Progress")
                        {
                            selectedSprintId = sprint.SprintId;
                            TimeSpan? duration = sprint.EndDate - sprint.StartDate;
                            <option value="@sprint.SprintId" selected>
                                @sprint.Name
                            </option>
                        }
                        else
                        {
                            TimeSpan? duration = sprint.EndDate - sprint.StartDate;
                            <option value="@sprint.SprintId">
                                @sprint.Name
                            </option>
                        }
                    }
                }
            </select> *@
            <select
                data-bind="options: sprints, optionsText: 'name', optionsValue: 'sprintId', value: selectedSprintId, optionsCaption: 'Select a Sprint'"
                class="form-control"></select>

            <label class="fs-6" for="Country">Sprint*</label>
        </div>

        <div>
            @if (canAddEdit)
            {
                <button class="btn btn-block btn-secondary text-white h-100" id="addSprintButton"
                    data-bind="enable: selectedProjectId" onclick="openAddSprintModal()">
                    <span class="fw-bold">+</span> Add Sprint
                </button>
            }
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center my-3">
        @if (isMember == "Member")
        {
            <div class="form-check form-switch" id="assignedToMeCheckDiv">
                @* <input class="form-check-input" style="cursor: pointer;" type="checkbox" id="assignedToMeCheck"
                    data-user-id="@userId" disabled /> *@
                <input type="checkbox" data-bind="checked: assignedToMe" id="assignedToMeCheck" /> Assigned to Me
                <label class="form-check-label" for="assignedToMeCheck" style="cursor: pointer;">Assigned to Me</label>
            </div>
        }

        <div class="form-floating w-25" id="teamMembersDropDownDiv">
            @* <select class="form-select custom-select  rounded-0" id="teamMembersDropDown" disabled>
                <option value="">Select a Team Member</option>
                @if (Model.TeamMembers != null)
                {
                    @foreach (UserViewModel? member in Model.TeamMembers)
                    {
                        if (userId != member.UserId)
                        {
                            <option value="@member.UserId">@member.Name</option>
                        }
                    }
                }
            </select> *@
            <select
                data-bind="options: teamMembers, optionsText: 'name', optionsValue: 'userId', value: selectedUserId, optionsCaption: 'Select a Team Member', enable: !assignedToMe()"
                class="form-control"></select>

            <label class="fs-6" for="Country">Team Member</label>
        </div>

        <div id="sprintControls"></div>
        <div id="sprintDuration"></div>
    </div>

    <div id="taskListContainer" class="w-100 mb-3">
        <partial name="_TasksList" model="new List<TaskViewModel>()" />
    </div>

    <div class="accordion mb-3" id="accordionExample">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                    <span class="fw-bold">Backlog</span>
                </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne"
                data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Tasks</h5>
                        @if (canAddEdit)
                        {
                            <div>
                                <button class="btn btn-secondary text-white" id="addTaskButton"
                                    data-bind="enable: selectedProjectId" onclick="openAddTaskModal()">
                                    <span class="fw-bold">+</span> Add Task
                                </button>

                            </div>
                        }
                    </div>
                    <div id="backlogContainer" class="w-100 mb-3">
                        @if (Model.BacklogTasks != null && Model.BacklogTasks.Any())
                        {
                            <partial name="_BacklogTasks" model="@Model.BacklogTasks" />
                        }
                        else
                        {
                            <partial name="_BacklogTasks" model="new List<TaskViewModel>()" />
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Sprint Modal -->
<div class="modal fade" id="addSprintModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <!-- Load Modal Dynamically-->
</div>

<!-- Add Task Modal -->
<div class="modal fade" id="addTaskModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <!-- Load Modal Dynamically-->
</div>

<!-- Edit Task Modal  -->
<div class="modal fade" id="editTaskModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <!-- Load Modal Dynamically-->
</div>

<!-- Delete Task Modal -->
<div class="modal fade" id="deleteTaskModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered justify-content-center custom-modal-size">
        <div class="modal-content ">
            <div class="modal-header border-none">
                <h5 class="modal-title text-center" id="exampleModalLabel">Delete Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center d-flex align-items-center justify-content-center flex-column">
                <div class="d-flex align-items-center justify-content-center">
                    <img src="~/images/toppng.com-warning-icon-2400x2400.png"
                        style="height: 100px !important; width: 100px; !important"></img>
                </div>
                <div>Are you sure you want to delete this Task?</div>
            </div>
            <div class="modal-footer border-none pt-0 d-flex justify-content-center">
                <div class="mt-3">
                    <a href="#" id="deleteTaskLink" class="btn btn-danger btn-flat">Yes</a>
                    <button type="button" class="btn bg-white border-danger text-danger ms-1"
                        data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
</link>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
<script>
    var selectedProjectId = @Model.ProjectId;
    var userId = @userId;
    var selectedSprintId = @selectedSprintId;
    window.TaskPermissions = {
        canAddEdit: @canAddEdit.ToString().ToLower(),
        canDelete: @canDelete.ToString().ToLower()
        };
</script>
<script src="~/js/TaskView.js"></script>